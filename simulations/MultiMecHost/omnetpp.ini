# Example simulation for integrating veins (http://veins.car2x.org/) with Simu5G
#
# Requirements:
#       You need to enable the feature "Simu5G Cars" for this simulation
#       (Project->Properties->OMNeT++->Project Features)
#
#       You need to import the "veins" project and its subproject
#       "veins_inet" in your workspace.
[General]
cmdenv-autoflush = true
network = mobiedgesim.simulations.MultiMecHost.MultiMecHost

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = false
print-undisposed = false

sim-time-limit = 10000s

**.sctp.**.scalar-recording = false
**.sctp.**.vector-recording = false
**.routingRecorder.enabled = false

*.playgroundSizeX = 20000m
*.playgroundSizeY = 20000m
*.playgroundSizeZ = 50m

##########################################################
#            VeinsManager parameters                     #
##########################################################
*.veinsManager.host = "localhost"       # if traci-launchd runs on localhost
#*.veinsManager.host = "sumo"       # traci-launchd on different host/container
*.veinsManager.moduleType = "car=mobiedgesim.nodes.mobileNodes.ue.Ue *=mobiedgesim.nodes.mobileNodes.mmecHost.MmecHost"
*.veinsManager.moduleName = "car=ue *=mmecHost"
*.veinsManager.launchConfig = xmldoc("heterogeneous.launchd.xml")
*.veinsManager.updateInterval = 1s

##########################################################
#                      Mobility                          #
##########################################################
*.ue[*].mobility.typename = "VeinsInetMobility"
*.mmecHost[*].mobility.typename = "VeinsInetMobility"


##########################################################
#                       APPS                            #
##########################################################
# MEC Host app configuration
*.mmecHost*.numApps = 2
*.mmecHost*.app[0].typename = "UdpBasicApp"
*.mmecHost*.app[0].destAddresses = "ue[0]"
*.mmecHost*.app[0].destPort = 1000
*.mmecHost*.app[0].sendInterval = 1s
#*.mmecHost*.app[0].startTime = uniform(0s,1s)
*.mmecHost*.app[0].messageLength = 10Byte
*.mmecHost*.app[0].packetName = "mmeHostData"

*.mmecHost*.app[1].typename = "UdpSink"
*.mmecHost*.app[1].localPort = 1000


# UE Host app configuration
*.ue*.numApps = 2
*.ue*.app[0].typename = "UdpBasicApp"
*.ue*.app[0].destAddresses = "mmecHost[1]"
*.ue*.app[0].destPort = 1000
*.ue*.app[0].sendInterval = 1s
#*.ue*.app[0].startTime = uniform(0s,1s)
*.ue*.app[0].messageLength = 10Byte
*.ue*.app[0].packetName = "ueData"

*.ue*.app[1].typename = "UdpSink"
*.ue*.app[1].localPort = 1000

#startTime
*.mmecHost*.app[0].startTime = 1s
*.mmecHost*.app[1].startTime = 1s
*.ue*.app[0].startTime = 1s
*.ue*.app[1].startTime = 1s
##########################################################
#                       WLAN                            #
##########################################################
*.ue*.numWlanInterfaces = 1
*.ue*.ipv4.configurator.interfaces =  "wlan lo0"

*.mmecHost*.numWlanInterfaces = 1
*.mmecHost*.ipv4.configurator.interfaces =  "wlan lo0"

**.wlan*.radio.antenna.typename = "IsotropicAntenna"
# This antenna model describes the theoretical point source which radiates the
# same intensity of radiation in all directions.

# no need of extra mobility
**.wlan*.radio.antenna.mobility.typename = ""
**.wlan*.radio.antenna.mobilityModule = "^.^.^.mobility"

